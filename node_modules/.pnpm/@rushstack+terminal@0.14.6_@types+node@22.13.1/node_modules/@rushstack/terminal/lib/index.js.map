{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D;;;;;;;;GAQG;AAEH,uDAAqF;AAA7C,oHAAA,gBAAgB,OAAA;AACxD,mEAAuG;AAAzD,gIAAA,sBAAsB,OAAA;AACpE,mDAA0E;AAAjE,mHAAA,iBAAiB,OAAA;AAC1B,+CAA8C;AAArC,4GAAA,YAAY,OAAA;AACrB,iFAGyC;AADvC,8IAAA,6BAA6B,OAAA;AAE/B,mDAAyE;AAAhE,uHAAA,qBAAqB,OAAA;AAAE,gHAAA,cAAc,OAAA;AAC9C,uEAAsE;AAA7D,oIAAA,wBAAwB,OAAA;AACjC,yDAAwF;AAA/C,sHAAA,iBAAiB,OAAA;AAC1D,2DAA4F;AAAlD,yHAAA,mBAAmB,OAAA;AAC7D,qDAAkF;AAA3C,kHAAA,eAAe,OAAA;AACtD,iDAAgD;AAAvC,8GAAA,aAAa,OAAA;AACtB,yDAAwF;AAA/C,sHAAA,iBAAiB,OAAA;AAC1D,uDAAqF;AAA7C,oHAAA,gBAAgB,OAAA;AACxD,+CAAsE;AAArC,4GAAA,YAAY,OAAA;AAC7C,iEAAoG;AAAvD,8HAAA,qBAAqB,OAAA;AAClE,2CAAkF;AAAzE,wGAAA,UAAU,OAAA;AAEnB,uCAAsC;AAA7B,oGAAA,QAAQ,OAAA;AACjB,uCAAsC;AAA7B,oGAAA,QAAQ,OAAA;AACjB,yDAAuF;AAAtD,6HAAA,wBAAwB,OAAA;AACzD,qEAA0G;AAAjG,kIAAA,uBAAuB,OAAA;AAChC,+EAGwC;AAFtC,4IAAA,4BAA4B,OAAA;AAG9B,6EAMuC;AALrC,0IAAA,2BAA2B,OAAA;AAM7B,mEAAuG;AAA9F,gIAAA,sBAAsB,OAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * This library implements a system for processing human readable text that\n * will be output by console applications.\n *\n * @remarks\n * See the {@link TerminalWritable} documentation for an overview of the major concepts.\n *\n * @packageDocumentation\n */\n\nexport { type ICallbackWritableOptions, CallbackWritable } from './CallbackWritable';\nexport { type IDiscardStdoutTransformOptions, DiscardStdoutTransform } from './DiscardStdoutTransform';\nexport { TerminalChunkKind, type ITerminalChunk } from './ITerminalChunk';\nexport { MockWritable } from './MockWritable';\nexport {\n  type INormalizeNewlinesTextRewriterOptions,\n  NormalizeNewlinesTextRewriter\n} from './NormalizeNewlinesTextRewriter';\nexport { DEFAULT_CONSOLE_WIDTH, PrintUtilities } from './PrintUtilities';\nexport { RemoveColorsTextRewriter } from './RemoveColorsTextRewriter';\nexport { type ISplitterTransformOptions, SplitterTransform } from './SplitterTransform';\nexport { type IStdioLineTransformOptions, StderrLineTransform } from './StdioLineTransform';\nexport { type IStdioSummarizerOptions, StdioSummarizer } from './StdioSummarizer';\nexport { StdioWritable } from './StdioWritable';\nexport { type ITerminalTransformOptions, TerminalTransform } from './TerminalTransform';\nexport { type ITerminalWritableOptions, TerminalWritable } from './TerminalWritable';\nexport { type TextRewriterState, TextRewriter } from './TextRewriter';\nexport { type ITextRewriterTransformOptions, TextRewriterTransform } from './TextRewriterTransform';\nexport { AnsiEscape, type IAnsiEscapeConvertForTestsOptions } from './AnsiEscape';\nexport type { ITerminal, TerminalWriteParameters, ITerminalWriteOptions } from './ITerminal';\nexport { Terminal } from './Terminal';\nexport { Colorize } from './Colorize';\nexport { type ITerminalProvider, TerminalProviderSeverity } from './ITerminalProvider';\nexport { ConsoleTerminalProvider, type IConsoleTerminalProviderOptions } from './ConsoleTerminalProvider';\nexport {\n  StringBufferTerminalProvider,\n  type IStringBufferOutputOptions\n} from './StringBufferTerminalProvider';\nexport {\n  PrefixProxyTerminalProvider,\n  type IPrefixProxyTerminalProviderOptions,\n  type IDynamicPrefixProxyTerminalProviderOptions,\n  type IPrefixProxyTerminalProviderOptionsBase,\n  type IStaticPrefixProxyTerminalProviderOptions\n} from './PrefixProxyTerminalProvider';\nexport { TerminalStreamWritable, type ITerminalStreamWritableOptions } from './TerminalStreamWritable';\n"]}