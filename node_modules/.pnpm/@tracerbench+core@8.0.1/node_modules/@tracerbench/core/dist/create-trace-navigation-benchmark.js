"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const trace_model_1 = require("@tracerbench/trace-model");
const create_trace_benchmark_1 = require("./create-trace-benchmark");
const extract_navigation_sample_1 = require("./metrics/extract-navigation-sample");
const inject_mark_observer_1 = require("./util/inject-mark-observer");
const navigate_1 = require("./util/navigate");
const setup_page_1 = require("./util/setup-page");
const utils_1 = require("./trace/utils");
function createTraceNavigationBenchmark(group, url, markers, options = {}) {
    if (markers.length === 0) {
        markers.push({
            start: 'navigationStart',
            label: 'load'
        }, {
            start: utils_1.LCP_EVENT_NAME,
            label: 'paint'
        });
    }
    return (0, create_trace_benchmark_1.default)(group, async (page, _i, _isTrial, raceCancel, trace) => {
        (0, setup_page_1.default)(page, raceCancel, options.pageSetupOptions);
        const markerList = (0, utils_1.uniformLCPEventName)(markers);
        const mLength = markerList.length;
        const { start: lastMarker } = markerList[mLength - 1];
        const traceEndAtLcp = (0, utils_1.isTraceEndAtLCP)(markerList);
        let priorMarker = 'navigationStart';
        if (traceEndAtLcp && mLength >= 2) {
            priorMarker = markerList[mLength - 2].start;
        }
        let waitTraceEnd;
        if (traceEndAtLcp) {
            waitTraceEnd = await (0, inject_mark_observer_1.injectLCPObserver)(page, priorMarker);
        }
        else {
            waitTraceEnd = await (0, inject_mark_observer_1.default)(page, lastMarker);
        }
        return (0, extract_navigation_sample_1.default)((0, trace_model_1.buildModel)(await trace(async (raceCancel) => {
            // do navigation
            await (0, navigate_1.default)(page, url, raceCancel);
            await waitTraceEnd(raceCancel);
        })), markerList);
    }, options);
}
exports.default = createTraceNavigationBenchmark;
//# sourceMappingURL=create-trace-navigation-benchmark.js.map