import Protocol from 'devtools-protocol';
export interface IConditions {
    network: keyof INetworkConditions & string;
    cpu: number;
}
export declare type INetworkConditions = {
    none: Protocol.Network.EmulateNetworkConditionsRequest;
    dialup: Protocol.Network.EmulateNetworkConditionsRequest;
    'slow-2g': Protocol.Network.EmulateNetworkConditionsRequest;
    '2g': Protocol.Network.EmulateNetworkConditionsRequest;
    '3g': Protocol.Network.EmulateNetworkConditionsRequest;
    offline: Protocol.Network.EmulateNetworkConditionsRequest;
    cable: Protocol.Network.EmulateNetworkConditionsRequest;
    dsl: Protocol.Network.EmulateNetworkConditionsRequest;
    'slow-edge': Protocol.Network.EmulateNetworkConditionsRequest;
    edge: Protocol.Network.EmulateNetworkConditionsRequest;
    'slow-3g': Protocol.Network.EmulateNetworkConditionsRequest;
    'fast-3g': Protocol.Network.EmulateNetworkConditionsRequest;
    '4g': Protocol.Network.EmulateNetworkConditionsRequest;
    LTE: Protocol.Network.EmulateNetworkConditionsRequest;
    FIOS: Protocol.Network.EmulateNetworkConditionsRequest;
    [key: string]: Protocol.Network.EmulateNetworkConditionsRequest;
};
export declare const networkConditions: INetworkConditions;
//# sourceMappingURL=conditions.d.ts.map