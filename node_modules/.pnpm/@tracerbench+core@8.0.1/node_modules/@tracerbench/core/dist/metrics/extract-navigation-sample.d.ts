import { TraceMetadata } from '@tracerbench/trace-event';
import { TraceModel } from '@tracerbench/trace-model';
import { Marker } from '../create-trace-navigation-benchmark';
export default function extractNavigationSample(trace: TraceModel, markers: Marker[]): NavigationSample;
export interface RuntimeCallStats {
    [group: string]: RuntimeCallStatGroup | undefined;
}
export interface RuntimeCallStatGroup {
    [stat: string]: RuntimeCallStat | undefined;
}
export interface RuntimeCallStat {
    /**
     * count of stat
     */
    count: number;
    /**
     * time in microseconds
     */
    time: number;
}
export interface NavigationSample {
    /**
     * Microseconds from start mark until the start of the first Paint event after the last mark.
     */
    duration: number;
    /**
     * Samples for phases duration the iteration.
     */
    phases: PhaseSample[];
    metadata: TraceMetadata;
    /**
     * Runtime call stats.
     *
     * Present if param.runtimeStats enabled.
     */
    runtimeCallStats?: RuntimeCallStats;
}
export interface PhaseSample {
    /**
     * Name of phase as defined by the label property of the marker config.
     */
    phase: string;
    /**
     * The start of the phase.
     */
    start: number;
    /**
     * The duration in microseconds of the phase.
     */
    duration: number;
}
//# sourceMappingURL=extract-navigation-sample.d.ts.map