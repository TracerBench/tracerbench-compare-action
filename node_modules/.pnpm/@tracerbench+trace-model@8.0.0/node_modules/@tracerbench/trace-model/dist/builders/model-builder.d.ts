import { TraceEvent, TraceMetadata, TraceStreamJson } from '@tracerbench/trace-event';
import type { MetadataEventModel, ProcessId, TraceModel } from '../types';
import Bounds from '../util/bounds';
import Cache from '../util/cache';
import EventModelImpl, { EventModelImplUnion } from './event-model-impl';
import ProcessBuilder from './process-builder';
export default class ModelBuilder {
    processes: Cache<ProcessId, ProcessBuilder>;
    metadata: TraceMetadata | undefined;
    bounds: Bounds | undefined;
    events: EventModelImpl[];
    metadataEvents: MetadataEventModel[];
    constructor();
    get start(): number;
    get end(): number;
    process(pid: ProcessId): ProcessBuilder;
    extendBounds(event: EventModelImplUnion): void;
    addMetadata(event: MetadataEventModel): void;
    addEvent(event: EventModelImplUnion): void;
    build(trace: TraceStreamJson | TraceEvent[]): TraceModel;
}
//# sourceMappingURL=model-builder.d.ts.map