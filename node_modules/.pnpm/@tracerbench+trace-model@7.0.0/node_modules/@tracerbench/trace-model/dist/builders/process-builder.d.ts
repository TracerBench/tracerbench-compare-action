import type { MetadataEventModel, ProcessId, ProcessModel, ThreadId, TraceModel } from '../types';
import Bounds from '../util/bounds';
import Cache from '../util/cache';
import type { EventModelImplUnion } from './event-model-impl';
import ThreadBuilder from './thread-builder';
export default class ProcessBuilder {
    pid: ProcessId;
    threads: Cache<ThreadId, ThreadBuilder>;
    name: string;
    labels: string;
    sortIndex: number;
    bounds: Bounds | undefined;
    events: EventModelImplUnion[];
    constructor(pid: ProcessId);
    get start(): number;
    get end(): number;
    get isRenderer(): boolean;
    thread(tid: ThreadId): ThreadBuilder;
    extendBounds(event: EventModelImplUnion): void;
    addMetadata(event: MetadataEventModel): void;
    addEvent(event: EventModelImplUnion): void;
    build(trace: TraceModel): ProcessModel;
}
//# sourceMappingURL=process-builder.d.ts.map