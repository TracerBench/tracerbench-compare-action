{"version":3,"file":"DocNoteBox.js","sourceRoot":"","sources":["../../src/nodes/DocNoteBox.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,4CAAgF;AAChF,2DAAwD;AAOxD;;GAEG;AACH,MAAa,UAAW,SAAQ,eAAO;IAGrC,YAAmB,UAAiC,EAAE,iBAA0C;QAC9F,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,kBAAU,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,iBAAiB,CAAC,CAAC;IAC1F,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,OAAO,qCAAiB,CAAC,OAAO,CAAC;IACnC,CAAC;IAED,gBAAgB;IACN,eAAe;QACvB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;CACF;AAjBD,gCAiBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { type IDocNodeParameters, DocNode, DocSection } from '@microsoft/tsdoc';\nimport { CustomDocNodeKind } from './CustomDocNodeKind';\n\n/**\n * Constructor parameters for {@link DocNoteBox}.\n */\nexport interface IDocNoteBoxParameters extends IDocNodeParameters {}\n\n/**\n * Represents a note box, which is typically displayed as a bordered box containing informational text.\n */\nexport class DocNoteBox extends DocNode {\n  public readonly content: DocSection;\n\n  public constructor(parameters: IDocNoteBoxParameters, sectionChildNodes?: ReadonlyArray<DocNode>) {\n    super(parameters);\n    this.content = new DocSection({ configuration: this.configuration }, sectionChildNodes);\n  }\n\n  /** @override */\n  public get kind(): string {\n    return CustomDocNodeKind.NoteBox;\n  }\n\n  /** @override */\n  protected onGetChildNodes(): ReadonlyArray<DocNode | undefined> {\n    return [this.content];\n  }\n}\n"]}