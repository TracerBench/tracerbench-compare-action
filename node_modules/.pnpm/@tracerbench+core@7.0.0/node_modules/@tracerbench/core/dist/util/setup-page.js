"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
async function setupPage(page, raceCancel, options = {}) {
    const { cpuThrottlingRate = 0, emulateNetworkConditions, deviceMetricsOverride, userAgentOverride, cookies } = options;
    await Promise.all([
        page.send('Page.enable', undefined, raceCancel),
        page.send('Performance.enable', undefined, raceCancel)
    ]);
    if (cookies !== undefined) {
        await page.send('Network.setCookies', { cookies }, raceCancel);
    }
    if (deviceMetricsOverride !== undefined) {
        await page.send('Emulation.setDeviceMetricsOverride', deviceMetricsOverride, raceCancel);
    }
    if (userAgentOverride !== undefined) {
        await page.send('Emulation.setUserAgentOverride', userAgentOverride, raceCancel);
    }
    if (cpuThrottlingRate > 0) {
        await page.send('Emulation.setCPUThrottlingRate', {
            rate: cpuThrottlingRate
        });
    }
    if (emulateNetworkConditions !== undefined) {
        // needs to be enabled for throttling
        await page.send('Network.enable', { maxTotalBufferSize: 0 }, raceCancel);
        await page.send('Network.emulateNetworkConditions', emulateNetworkConditions, raceCancel);
    }
}
exports.default = setupPage;
//# sourceMappingURL=setup-page.js.map