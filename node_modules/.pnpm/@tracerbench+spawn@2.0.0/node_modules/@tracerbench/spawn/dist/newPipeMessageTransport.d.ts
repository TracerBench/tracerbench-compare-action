/// <reference types="node" />
import type { AttachMessageTransport } from "../types";
export declare type Write = (data: Buffer) => void;
export declare type EndWrite = () => void;
export declare type OnRead = (chunk: Buffer) => void;
export declare type OnReadEnd = () => void;
export declare type OnClose = (err?: Error) => void;
export declare type AttachProcess = (onRead: OnRead, onReadEnd: OnReadEnd, onClose: OnClose) => [Write, EndWrite];
export default function newPipeMessageTransport(connect: AttachProcess): AttachMessageTransport;
//# sourceMappingURL=newPipeMessageTransport.d.ts.map