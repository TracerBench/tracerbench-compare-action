import type { AttachMessageTransport, AttachProtocolTransport, DebugCallback, RaceCancellation } from "../types";
export default function newAttachProtocolTransport<SessionId>(attach: AttachMessageTransport, debug?: DebugCallback, raceCancellation?: RaceCancellation): AttachProtocolTransport<SessionId>;
export { default as newAttachJsonRpcTransport } from "./newAttachJsonRpcTransport";
export { default as newAttachProtocolTransport } from "./newAttachProtocolTransport";
export { isProtocolError } from "./newProtocolError";
export type { AttachMessageTransport, OnClose, OnMessage, SendMessage, Cancellation, RaceCancellation, Task, AttachJsonRpcTransport, SendRequest, AttachProtocolTransport, ProtocolTransport, AttachSession, DetachSession, SendMethod, SuccessResponse, ErrorResponse, ResponseError, Response, Request, Notification, DebugCallback, ProtocolError, OnNotification, OnError, OnEvent, } from "../types";
//# sourceMappingURL=index.d.ts.map