import { flags as oclifFlags } from "@oclif/command";
import { IConfig } from "@oclif/config";
import { Marker } from "@tracerbench/core";
import Protocol from "devtools-protocol";
import { TBBaseCommand } from "../../command-config";
import type { RegressionThresholdStat } from "../../command-config/tb-config";
import { ITBConfig } from "../../command-config/tb-config";
export interface ICompareFlags {
    hideAnalysis: boolean;
    browserArgs: string[];
    cpuThrottleRate: number;
    fidelity: number;
    markers: Marker[];
    network: Protocol.Network.EmulateNetworkConditionsRequest;
    tbResultsFolder: string;
    controlURL: string | undefined;
    experimentURL: string | undefined;
    runtimeStats: boolean;
    emulateDevice?: string;
    emulateDeviceOrientation?: string;
    socksPorts?: [string, string] | [number, number] | undefined;
    debug: boolean;
    regressionThreshold?: number;
    sampleTimeout: number;
    headless: boolean;
    config?: string;
    report?: boolean;
    isCIEnv?: boolean;
    regressionThresholdStat: RegressionThresholdStat;
}
export default class Compare extends TBBaseCommand {
    static description: string;
    static flags: oclifFlags.Input<any>;
    compareFlags: ICompareFlags;
    parsedConfig: ITBConfig;
    explicitFlags: string[];
    analyzedJSONString: string;
    constructor(argv: string[], config: IConfig);
    init(): Promise<void>;
    run(): Promise<string>;
    private parseFlags;
    /**
     * Final result of the configs are in the following order:
     *
     * controlConfigs = tbconfig:controlBenchmarkEnvironment > command line > tbconfig > default
     * experimentConfigs = tbconfig:experimentBenchmarkEnvironment > command line > tbconfig > default
     *
     * This functions handles the tsconfig:** part since it is assumed that parent function that passed input "flags"
     * would've handled "command line > tbconfig > default"
     *
     * @param this.parsedConfig - Object containing configs parsed from the Command class
     */
    private generateControlExperimentServerConfig;
}
//# sourceMappingURL=index.d.ts.map