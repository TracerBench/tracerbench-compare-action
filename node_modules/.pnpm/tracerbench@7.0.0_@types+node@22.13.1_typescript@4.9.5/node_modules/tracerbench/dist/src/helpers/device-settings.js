"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEmulateDeviceSettingForKeyAndOrientation = void 0;
const errors_1 = require("@oclif/errors");
const device_lookup_1 = require("./device-lookup");
const utils_1 = require("./utils");
const deviceSettings = device_lookup_1.deviceLookup.map((item) => {
    return {
        screens: item.device.screen,
        deviceScaleFactor: item.device.screen["device-pixel-ratio"] || 0,
        mobile: item.device.capabilities.indexOf("mobile") > -1,
        userAgent: item.device["user-agent"],
        typeable: (0, utils_1.convertToTypable)(item.device.title),
        name: item.device.title,
    };
});
/**
 * Iterate over deviceSettings until a match is found in the option's typable field. Extract the contents into EmulateDeviceSetting
 * formatted object
 *
 * @param key - One of typeable strings such as iphone-x
 * @param orientation - Either "vertical" or "horizontal"
 */
function getEmulateDeviceSettingForKeyAndOrientation(key, orientation = "vertical") {
    let deviceSetting;
    for (deviceSetting of deviceSettings) {
        if (key === deviceSetting.typeable) {
            if (!deviceSetting.screens[orientation]) {
                throw new errors_1.CLIError(`${orientation} orientation for ${key} does not exist`);
            }
            return {
                deviceMetricsOverride: {
                    width: deviceSetting.screens[orientation].width,
                    height: deviceSetting.screens[orientation].height,
                    deviceScaleFactor: deviceSetting.deviceScaleFactor,
                    mobile: deviceSetting.mobile,
                },
                userAgentOverride: {
                    userAgent: deviceSetting.userAgent,
                },
                typeable: deviceSetting.typeable,
            };
        }
    }
    throw new errors_1.CLIError(`Device emulation settings not found for device ${key}`);
}
exports.getEmulateDeviceSettingForKeyAndOrientation = getEmulateDeviceSettingForKeyAndOrientation;
exports.default = deviceSettings;
//# sourceMappingURL=device-settings.js.map