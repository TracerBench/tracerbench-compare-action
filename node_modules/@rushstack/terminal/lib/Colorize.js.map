{"version":3,"file":"Colorize.js","sourceRoot":"","sources":["../src/Colorize.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { AnsiEscape } from './AnsiEscape';\n\nexport enum SgrParameterAttribute {\n  BlackForeground = 30,\n  RedForeground = 31,\n  GreenForeground = 32,\n  YellowForeground = 33,\n  BlueForeground = 34,\n  MagentaForeground = 35,\n  CyanForeground = 36,\n  WhiteForeground = 37,\n  GrayForeground = 90,\n  DefaultForeground = 39,\n\n  BlackBackground = 40,\n  RedBackground = 41,\n  GreenBackground = 42,\n  YellowBackground = 43,\n  BlueBackground = 44,\n  MagentaBackground = 45,\n  CyanBackground = 46,\n  WhiteBackground = 47,\n  GrayBackground = 100,\n  DefaultBackground = 49,\n\n  Bold = 1,\n\n  // On Linux, the \"BoldOff\" code instead causes the text to be double-underlined:\n  // https://en.wikipedia.org/wiki/Talk:ANSI_escape_code#SGR_21%E2%80%94%60Bold_off%60_not_widely_supported\n  // Use \"NormalColorOrIntensity\" instead\n  // BoldOff = 21,\n\n  Dim = 2,\n  NormalColorOrIntensity = 22,\n  Underline = 4,\n  UnderlineOff = 24,\n  Blink = 5,\n  BlinkOff = 25,\n  InvertColor = 7,\n  InvertColorOff = 27,\n  Hidden = 8,\n  HiddenOff = 28\n}\n\nconst RAINBOW_SEQUENCE: SgrParameterAttribute[] = [\n  SgrParameterAttribute.RedForeground,\n  SgrParameterAttribute.YellowForeground,\n  SgrParameterAttribute.GreenForeground,\n  SgrParameterAttribute.CyanForeground,\n  SgrParameterAttribute.BlueForeground,\n  SgrParameterAttribute.MagentaForeground\n];\n\n/**\n * The static functions on this class are used to produce colored text\n * for use with a terminal that supports ANSI escape codes.\n *\n * Note that this API always generates color codes, regardless of whether\n * the process's stdout is a TTY. The reason is that, in a complex program, the\n * code that is generating strings often does not know were those strings will end\n * up. In some cases, the same log message may get printed both to a shell\n * that supports color AND to a log file that does not.\n *\n * @example\n * ```ts\n * console.log(Colorize.red('Red Text!'))\n * terminal.writeLine(Colorize.green('Green Text!'), ' ', Colorize.blue('Blue Text!'));\n *```\n *\n * @public\n */\nexport class Colorize {\n  public static black(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.BlackForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static red(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.RedForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static green(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.GreenForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static yellow(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.YellowForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static blue(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.BlueForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static magenta(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.MagentaForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static cyan(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.CyanForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static white(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.WhiteForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static gray(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.GrayForeground,\n      SgrParameterAttribute.DefaultForeground,\n      text\n    );\n  }\n\n  public static blackBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.BlackBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static redBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.RedBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static greenBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.GreenBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static yellowBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.YellowBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static blueBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.BlueBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static magentaBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.MagentaBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static cyanBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.CyanBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static whiteBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.WhiteBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static grayBackground(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.GrayBackground,\n      SgrParameterAttribute.DefaultBackground,\n      text\n    );\n  }\n\n  public static bold(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.Bold,\n      SgrParameterAttribute.NormalColorOrIntensity,\n      text\n    );\n  }\n\n  public static dim(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.Dim,\n      SgrParameterAttribute.NormalColorOrIntensity,\n      text\n    );\n  }\n\n  public static underline(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.Underline,\n      SgrParameterAttribute.UnderlineOff,\n      text\n    );\n  }\n\n  public static blink(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.Blink,\n      SgrParameterAttribute.BlinkOff,\n      text\n    );\n  }\n\n  public static invertColor(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.InvertColor,\n      SgrParameterAttribute.InvertColorOff,\n      text\n    );\n  }\n\n  public static hidden(text: string): string {\n    return Colorize._wrapTextInAnsiEscapeCodes(\n      SgrParameterAttribute.Hidden,\n      SgrParameterAttribute.HiddenOff,\n      text\n    );\n  }\n\n  public static rainbow(text: string): string {\n    return Colorize._applyColorSequence(text, RAINBOW_SEQUENCE);\n  }\n\n  private static _applyColorSequence(text: string, sequence: SgrParameterAttribute[]): string {\n    let result: string = '';\n    const sequenceLength: number = sequence.length;\n    for (let i: number = 0; i < text.length; i++) {\n      result += AnsiEscape.getEscapeSequenceForAnsiCode(sequence[i % sequenceLength]) + text[i];\n    }\n\n    return result + AnsiEscape.getEscapeSequenceForAnsiCode(SgrParameterAttribute.DefaultForeground);\n  }\n\n  private static _wrapTextInAnsiEscapeCodes(startCode: number, endCode: number, text: string): string {\n    return (\n      AnsiEscape.getEscapeSequenceForAnsiCode(startCode) +\n      text +\n      AnsiEscape.getEscapeSequenceForAnsiCode(endCode)\n    );\n  }\n}\n"]}