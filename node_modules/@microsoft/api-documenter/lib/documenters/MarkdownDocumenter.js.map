{"version":3,"file":"MarkdownDocumenter.js","sourceRoot":"","sources":["../../src/documenters/MarkdownDocumenter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { PackageName, FileSystem, NewlineKind } from '@rushstack/node-core-library';\nimport {\n  DocSection,\n  DocPlainText,\n  DocLinkTag,\n  type TSDocConfiguration,\n  StringBuilder,\n  DocNodeKind,\n  DocParagraph,\n  DocCodeSpan,\n  DocFencedCode,\n  StandardTags,\n  type DocBlock,\n  type DocComment,\n  type DocNodeContainer\n} from '@microsoft/tsdoc';\nimport {\n  type ApiModel,\n  type ApiItem,\n  type ApiEnum,\n  type ApiPackage,\n  ApiItemKind,\n  ApiReleaseTagMixin,\n  ApiDocumentedItem,\n  ApiClass,\n  ReleaseTag,\n  ApiStaticMixin,\n  ApiPropertyItem,\n  ApiInterface,\n  type Excerpt,\n  ApiAbstractMixin,\n  ApiParameterListMixin,\n  ApiReturnTypeMixin,\n  ApiDeclaredItem,\n  type ApiNamespace,\n  ExcerptTokenKind,\n  type IResolveDeclarationReferenceResult,\n  ApiTypeAlias,\n  type ExcerptToken,\n  ApiOptionalMixin,\n  ApiInitializerMixin,\n  ApiProtectedMixin,\n  ApiReadonlyMixin,\n  type IFindApiItemsResult\n} from '@microsoft/api-extractor-model';\n\nimport { CustomDocNodes } from '../nodes/CustomDocNodeKind';\nimport { DocHeading } from '../nodes/DocHeading';\nimport { DocTable } from '../nodes/DocTable';\nimport { DocEmphasisSpan } from '../nodes/DocEmphasisSpan';\nimport { DocTableRow } from '../nodes/DocTableRow';\nimport { DocTableCell } from '../nodes/DocTableCell';\nimport { DocNoteBox } from '../nodes/DocNoteBox';\nimport { Utilities } from '../utils/Utilities';\nimport { CustomMarkdownEmitter } from '../markdown/CustomMarkdownEmitter';\nimport { PluginLoader } from '../plugin/PluginLoader';\nimport {\n  type IMarkdownDocumenterFeatureOnBeforeWritePageArgs,\n  MarkdownDocumenterFeatureContext\n} from '../plugin/MarkdownDocumenterFeature';\nimport type { DocumenterConfig } from './DocumenterConfig';\nimport { MarkdownDocumenterAccessor } from '../plugin/MarkdownDocumenterAccessor';\n\nexport interface IMarkdownDocumenterOptions {\n  apiModel: ApiModel;\n  documenterConfig: DocumenterConfig | undefined;\n  outputFolder: string;\n}\n\n/**\n * Renders API documentation in the Markdown file format.\n * For more info:  https://en.wikipedia.org/wiki/Markdown\n */\nexport class MarkdownDocumenter {\n  private readonly _apiModel: ApiModel;\n  private readonly _documenterConfig: DocumenterConfig | undefined;\n  private readonly _tsdocConfiguration: TSDocConfiguration;\n  private readonly _markdownEmitter: CustomMarkdownEmitter;\n  private readonly _outputFolder: string;\n  private readonly _pluginLoader: PluginLoader;\n\n  public constructor(options: IMarkdownDocumenterOptions) {\n    this._apiModel = options.apiModel;\n    this._documenterConfig = options.documenterConfig;\n    this._outputFolder = options.outputFolder;\n    this._tsdocConfiguration = CustomDocNodes.configuration;\n    this._markdownEmitter = new CustomMarkdownEmitter(this._apiModel);\n\n    this._pluginLoader = new PluginLoader();\n  }\n\n  public generateFiles(): void {\n    if (this._documenterConfig) {\n      this._pluginLoader.load(this._documenterConfig, () => {\n        return new MarkdownDocumenterFeatureContext({\n          apiModel: this._apiModel,\n          outputFolder: this._outputFolder,\n          documenter: new MarkdownDocumenterAccessor({\n            getLinkForApiItem: (apiItem: ApiItem) => {\n              return this._getLinkFilenameForApiItem(apiItem);\n            }\n          })\n        });\n      });\n    }\n\n    console.log();\n    this._deleteOldOutputFiles();\n\n    this._writeApiItemPage(this._apiModel);\n\n    if (this._pluginLoader.markdownDocumenterFeature) {\n      this._pluginLoader.markdownDocumenterFeature.onFinished({});\n    }\n  }\n\n  private _writeApiItemPage(apiItem: ApiItem): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n    const output: DocSection = new DocSection({ configuration });\n\n    this._writeBreadcrumb(output, apiItem);\n\n    const scopedName: string = apiItem.getScopedNameWithinPackage();\n\n    switch (apiItem.kind) {\n      case ApiItemKind.Class:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} class` }));\n        break;\n      case ApiItemKind.Enum:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} enum` }));\n        break;\n      case ApiItemKind.Interface:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} interface` }));\n        break;\n      case ApiItemKind.Constructor:\n      case ApiItemKind.ConstructSignature:\n        output.appendNode(new DocHeading({ configuration, title: scopedName }));\n        break;\n      case ApiItemKind.Method:\n      case ApiItemKind.MethodSignature:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} method` }));\n        break;\n      case ApiItemKind.Function:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} function` }));\n        break;\n      case ApiItemKind.Model:\n        output.appendNode(new DocHeading({ configuration, title: `API Reference` }));\n        break;\n      case ApiItemKind.Namespace:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} namespace` }));\n        break;\n      case ApiItemKind.Package:\n        console.log(`Writing ${apiItem.displayName} package`);\n        const unscopedPackageName: string = PackageName.getUnscopedName(apiItem.displayName);\n        output.appendNode(new DocHeading({ configuration, title: `${unscopedPackageName} package` }));\n        break;\n      case ApiItemKind.Property:\n      case ApiItemKind.PropertySignature:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} property` }));\n        break;\n      case ApiItemKind.TypeAlias:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} type` }));\n        break;\n      case ApiItemKind.Variable:\n        output.appendNode(new DocHeading({ configuration, title: `${scopedName} variable` }));\n        break;\n      default:\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\n    }\n\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.releaseTag === ReleaseTag.Alpha) {\n        this._writeAlphaWarning(output);\n      } else if (apiItem.releaseTag === ReleaseTag.Beta) {\n        this._writeBetaWarning(output);\n      }\n    }\n\n    const decoratorBlocks: DocBlock[] = [];\n\n    if (apiItem instanceof ApiDocumentedItem) {\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\n\n      if (tsdocComment) {\n        decoratorBlocks.push(\n          ...tsdocComment.customBlocks.filter(\n            (block) => block.blockTag.tagNameWithUpperCase === StandardTags.decorator.tagNameWithUpperCase\n          )\n        );\n\n        if (tsdocComment.deprecatedBlock) {\n          output.appendNode(\n            new DocNoteBox({ configuration }, [\n              new DocParagraph({ configuration }, [\n                new DocPlainText({\n                  configuration,\n                  text: 'Warning: This API is now obsolete. '\n                })\n              ]),\n              ...tsdocComment.deprecatedBlock.content.nodes\n            ])\n          );\n        }\n\n        this._appendSection(output, tsdocComment.summarySection);\n      }\n    }\n\n    if (apiItem instanceof ApiDeclaredItem) {\n      if (apiItem.excerpt.text.length > 0) {\n        output.appendNode(\n          new DocParagraph({ configuration }, [\n            new DocEmphasisSpan({ configuration, bold: true }, [\n              new DocPlainText({ configuration, text: 'Signature:' })\n            ])\n          ])\n        );\n        output.appendNode(\n          new DocFencedCode({\n            configuration,\n            code: apiItem.getExcerptWithModifiers(),\n            language: 'typescript'\n          })\n        );\n      }\n\n      this._writeHeritageTypes(output, apiItem);\n    }\n\n    if (decoratorBlocks.length > 0) {\n      output.appendNode(\n        new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Decorators:' })\n          ])\n        ])\n      );\n      for (const decoratorBlock of decoratorBlocks) {\n        output.appendNodes(decoratorBlock.content.nodes);\n      }\n    }\n\n    let appendRemarks: boolean = true;\n    switch (apiItem.kind) {\n      case ApiItemKind.Class:\n      case ApiItemKind.Interface:\n      case ApiItemKind.Namespace:\n      case ApiItemKind.Package:\n        this._writeRemarksSection(output, apiItem);\n        appendRemarks = false;\n        break;\n    }\n\n    switch (apiItem.kind) {\n      case ApiItemKind.Class:\n        this._writeClassTables(output, apiItem as ApiClass);\n        break;\n      case ApiItemKind.Enum:\n        this._writeEnumTables(output, apiItem as ApiEnum);\n        break;\n      case ApiItemKind.Interface:\n        this._writeInterfaceTables(output, apiItem as ApiInterface);\n        break;\n      case ApiItemKind.Constructor:\n      case ApiItemKind.ConstructSignature:\n      case ApiItemKind.Method:\n      case ApiItemKind.MethodSignature:\n      case ApiItemKind.Function:\n        this._writeParameterTables(output, apiItem as ApiParameterListMixin);\n        this._writeThrowsSection(output, apiItem);\n        break;\n      case ApiItemKind.Namespace:\n        this._writePackageOrNamespaceTables(output, apiItem as ApiNamespace);\n        break;\n      case ApiItemKind.Model:\n        this._writeModelTable(output, apiItem as ApiModel);\n        break;\n      case ApiItemKind.Package:\n        this._writePackageOrNamespaceTables(output, apiItem as ApiPackage);\n        break;\n      case ApiItemKind.Property:\n      case ApiItemKind.PropertySignature:\n        break;\n      case ApiItemKind.TypeAlias:\n        break;\n      case ApiItemKind.Variable:\n        break;\n      default:\n        throw new Error('Unsupported API item kind: ' + apiItem.kind);\n    }\n\n    if (appendRemarks) {\n      this._writeRemarksSection(output, apiItem);\n    }\n\n    const filename: string = path.join(this._outputFolder, this._getFilenameForApiItem(apiItem));\n    const stringBuilder: StringBuilder = new StringBuilder();\n\n    stringBuilder.append(\n      '<!-- Do not edit this file. It is automatically generated by API Documenter. -->\\n\\n'\n    );\n\n    this._markdownEmitter.emit(stringBuilder, output, {\n      contextApiItem: apiItem,\n      onGetFilenameForApiItem: (apiItemForFilename: ApiItem) => {\n        return this._getLinkFilenameForApiItem(apiItemForFilename);\n      }\n    });\n\n    let pageContent: string = stringBuilder.toString();\n\n    if (this._pluginLoader.markdownDocumenterFeature) {\n      // Allow the plugin to customize the pageContent\n      const eventArgs: IMarkdownDocumenterFeatureOnBeforeWritePageArgs = {\n        apiItem: apiItem,\n        outputFilename: filename,\n        pageContent: pageContent\n      };\n      this._pluginLoader.markdownDocumenterFeature.onBeforeWritePage(eventArgs);\n      pageContent = eventArgs.pageContent;\n    }\n\n    FileSystem.writeFile(filename, pageContent, {\n      convertLineEndings: this._documenterConfig ? this._documenterConfig.newlineKind : NewlineKind.CrLf\n    });\n  }\n\n  private _writeHeritageTypes(output: DocSection, apiItem: ApiDeclaredItem): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    if (apiItem instanceof ApiClass) {\n      if (apiItem.extendsType) {\n        const extendsParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Extends: ' })\n          ])\n        ]);\n        this._appendExcerptWithHyperlinks(extendsParagraph, apiItem.extendsType.excerpt);\n        output.appendNode(extendsParagraph);\n      }\n      if (apiItem.implementsTypes.length > 0) {\n        const implementsParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Implements: ' })\n          ])\n        ]);\n        let needsComma: boolean = false;\n        for (const implementsType of apiItem.implementsTypes) {\n          if (needsComma) {\n            implementsParagraph.appendNode(new DocPlainText({ configuration, text: ', ' }));\n          }\n          this._appendExcerptWithHyperlinks(implementsParagraph, implementsType.excerpt);\n          needsComma = true;\n        }\n        output.appendNode(implementsParagraph);\n      }\n    }\n\n    if (apiItem instanceof ApiInterface) {\n      if (apiItem.extendsTypes.length > 0) {\n        const extendsParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Extends: ' })\n          ])\n        ]);\n        let needsComma: boolean = false;\n        for (const extendsType of apiItem.extendsTypes) {\n          if (needsComma) {\n            extendsParagraph.appendNode(new DocPlainText({ configuration, text: ', ' }));\n          }\n          this._appendExcerptWithHyperlinks(extendsParagraph, extendsType.excerpt);\n          needsComma = true;\n        }\n        output.appendNode(extendsParagraph);\n      }\n    }\n\n    if (apiItem instanceof ApiTypeAlias) {\n      const refs: ExcerptToken[] = apiItem.excerptTokens.filter(\n        (token) =>\n          token.kind === ExcerptTokenKind.Reference &&\n          token.canonicalReference &&\n          this._apiModel.resolveDeclarationReference(token.canonicalReference, undefined).resolvedApiItem\n      );\n      if (refs.length > 0) {\n        const referencesParagraph: DocParagraph = new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'References: ' })\n          ])\n        ]);\n        let needsComma: boolean = false;\n        const visited: Set<string> = new Set();\n        for (const ref of refs) {\n          if (visited.has(ref.text)) {\n            continue;\n          }\n          visited.add(ref.text);\n\n          if (needsComma) {\n            referencesParagraph.appendNode(new DocPlainText({ configuration, text: ', ' }));\n          }\n\n          this._appendExcerptTokenWithHyperlinks(referencesParagraph, ref);\n          needsComma = true;\n        }\n        output.appendNode(referencesParagraph);\n      }\n    }\n  }\n\n  private _writeRemarksSection(output: DocSection, apiItem: ApiItem): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    if (apiItem instanceof ApiDocumentedItem) {\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\n\n      if (tsdocComment) {\n        // Write the @remarks block\n        if (tsdocComment.remarksBlock) {\n          output.appendNode(new DocHeading({ configuration, title: 'Remarks' }));\n          this._appendSection(output, tsdocComment.remarksBlock.content);\n        }\n\n        // Write the @example blocks\n        const exampleBlocks: DocBlock[] = tsdocComment.customBlocks.filter(\n          (x) => x.blockTag.tagNameWithUpperCase === StandardTags.example.tagNameWithUpperCase\n        );\n\n        let exampleNumber: number = 1;\n        for (const exampleBlock of exampleBlocks) {\n          const heading: string = exampleBlocks.length > 1 ? `Example ${exampleNumber}` : 'Example';\n\n          output.appendNode(new DocHeading({ configuration, title: heading }));\n\n          this._appendSection(output, exampleBlock.content);\n\n          ++exampleNumber;\n        }\n      }\n    }\n  }\n\n  private _writeThrowsSection(output: DocSection, apiItem: ApiItem): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    if (apiItem instanceof ApiDocumentedItem) {\n      const tsdocComment: DocComment | undefined = apiItem.tsdocComment;\n\n      if (tsdocComment) {\n        // Write the @throws blocks\n        const throwsBlocks: DocBlock[] = tsdocComment.customBlocks.filter(\n          (x) => x.blockTag.tagNameWithUpperCase === StandardTags.throws.tagNameWithUpperCase\n        );\n\n        if (throwsBlocks.length > 0) {\n          const heading: string = 'Exceptions';\n          output.appendNode(new DocHeading({ configuration, title: heading }));\n\n          for (const throwsBlock of throwsBlocks) {\n            this._appendSection(output, throwsBlock.content);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * GENERATE PAGE: MODEL\n   */\n  private _writeModelTable(output: DocSection, apiModel: ApiModel): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const packagesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Package', 'Description']\n    });\n\n    for (const apiMember of apiModel.members) {\n      const row: DocTableRow = new DocTableRow({ configuration }, [\n        this._createTitleCell(apiMember),\n        this._createDescriptionCell(apiMember)\n      ]);\n\n      switch (apiMember.kind) {\n        case ApiItemKind.Package:\n          packagesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n      }\n    }\n\n    if (packagesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Packages' }));\n      output.appendNode(packagesTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: PACKAGE or NAMESPACE\n   */\n  private _writePackageOrNamespaceTables(output: DocSection, apiContainer: ApiPackage | ApiNamespace): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const abstractClassesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Abstract Class', 'Description']\n    });\n\n    const classesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Class', 'Description']\n    });\n\n    const enumerationsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Enumeration', 'Description']\n    });\n\n    const functionsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Function', 'Description']\n    });\n\n    const interfacesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Interface', 'Description']\n    });\n\n    const namespacesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Namespace', 'Description']\n    });\n\n    const variablesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Variable', 'Description']\n    });\n\n    const typeAliasesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Type Alias', 'Description']\n    });\n\n    const apiMembers: ReadonlyArray<ApiItem> =\n      apiContainer.kind === ApiItemKind.Package\n        ? (apiContainer as ApiPackage).entryPoints[0].members\n        : (apiContainer as ApiNamespace).members;\n\n    for (const apiMember of apiMembers) {\n      const row: DocTableRow = new DocTableRow({ configuration }, [\n        this._createTitleCell(apiMember),\n        this._createDescriptionCell(apiMember)\n      ]);\n\n      switch (apiMember.kind) {\n        case ApiItemKind.Class:\n          if (ApiAbstractMixin.isBaseClassOf(apiMember) && apiMember.isAbstract) {\n            abstractClassesTable.addRow(row);\n          } else {\n            classesTable.addRow(row);\n          }\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Enum:\n          enumerationsTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Interface:\n          interfacesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Namespace:\n          namespacesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Function:\n          functionsTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.TypeAlias:\n          typeAliasesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n\n        case ApiItemKind.Variable:\n          variablesTable.addRow(row);\n          this._writeApiItemPage(apiMember);\n          break;\n      }\n    }\n\n    if (classesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Classes' }));\n      output.appendNode(classesTable);\n    }\n\n    if (abstractClassesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Abstract Classes' }));\n      output.appendNode(abstractClassesTable);\n    }\n\n    if (enumerationsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Enumerations' }));\n      output.appendNode(enumerationsTable);\n    }\n    if (functionsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Functions' }));\n      output.appendNode(functionsTable);\n    }\n\n    if (interfacesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Interfaces' }));\n      output.appendNode(interfacesTable);\n    }\n\n    if (namespacesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Namespaces' }));\n      output.appendNode(namespacesTable);\n    }\n\n    if (variablesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Variables' }));\n      output.appendNode(variablesTable);\n    }\n\n    if (typeAliasesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Type Aliases' }));\n      output.appendNode(typeAliasesTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: CLASS\n   */\n  private _writeClassTables(output: DocSection, apiClass: ApiClass): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const eventsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Modifiers', 'Type', 'Description']\n    });\n\n    const constructorsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Constructor', 'Modifiers', 'Description']\n    });\n\n    const propertiesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Modifiers', 'Type', 'Description']\n    });\n\n    const methodsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Method', 'Modifiers', 'Description']\n    });\n\n    const apiMembers: readonly ApiItem[] = this._getMembersAndWriteIncompleteWarning(apiClass, output);\n    for (const apiMember of apiMembers) {\n      const isInherited: boolean = apiMember.parent !== apiClass;\n      switch (apiMember.kind) {\n        case ApiItemKind.Constructor: {\n          constructorsTable.addRow(\n            new DocTableRow({ configuration }, [\n              this._createTitleCell(apiMember),\n              this._createModifiersCell(apiMember),\n              this._createDescriptionCell(apiMember, isInherited)\n            ])\n          );\n\n          this._writeApiItemPage(apiMember);\n          break;\n        }\n        case ApiItemKind.Method: {\n          methodsTable.addRow(\n            new DocTableRow({ configuration }, [\n              this._createTitleCell(apiMember),\n              this._createModifiersCell(apiMember),\n              this._createDescriptionCell(apiMember, isInherited)\n            ])\n          );\n\n          this._writeApiItemPage(apiMember);\n          break;\n        }\n        case ApiItemKind.Property: {\n          if ((apiMember as ApiPropertyItem).isEventProperty) {\n            eventsTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createModifiersCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember, isInherited)\n              ])\n            );\n          } else {\n            propertiesTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createModifiersCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember, isInherited)\n              ])\n            );\n          }\n\n          this._writeApiItemPage(apiMember);\n          break;\n        }\n      }\n    }\n\n    if (eventsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Events' }));\n      output.appendNode(eventsTable);\n    }\n\n    if (constructorsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Constructors' }));\n      output.appendNode(constructorsTable);\n    }\n\n    if (propertiesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Properties' }));\n      output.appendNode(propertiesTable);\n    }\n\n    if (methodsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Methods' }));\n      output.appendNode(methodsTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: ENUM\n   */\n  private _writeEnumTables(output: DocSection, apiEnum: ApiEnum): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const enumMembersTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Member', 'Value', 'Description']\n    });\n\n    for (const apiEnumMember of apiEnum.members) {\n      enumMembersTable.addRow(\n        new DocTableRow({ configuration }, [\n          new DocTableCell({ configuration }, [\n            new DocParagraph({ configuration }, [\n              new DocPlainText({ configuration, text: Utilities.getConciseSignature(apiEnumMember) })\n            ])\n          ]),\n          this._createInitializerCell(apiEnumMember),\n          this._createDescriptionCell(apiEnumMember)\n        ])\n      );\n    }\n\n    if (enumMembersTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Enumeration Members' }));\n      output.appendNode(enumMembersTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: INTERFACE\n   */\n  private _writeInterfaceTables(output: DocSection, apiInterface: ApiInterface): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const eventsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Modifiers', 'Type', 'Description']\n    });\n\n    const propertiesTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Property', 'Modifiers', 'Type', 'Description']\n    });\n\n    const methodsTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Method', 'Description']\n    });\n\n    const apiMembers: readonly ApiItem[] = this._getMembersAndWriteIncompleteWarning(apiInterface, output);\n    for (const apiMember of apiMembers) {\n      const isInherited: boolean = apiMember.parent !== apiInterface;\n      switch (apiMember.kind) {\n        case ApiItemKind.ConstructSignature:\n        case ApiItemKind.MethodSignature: {\n          methodsTable.addRow(\n            new DocTableRow({ configuration }, [\n              this._createTitleCell(apiMember),\n              this._createDescriptionCell(apiMember, isInherited)\n            ])\n          );\n\n          this._writeApiItemPage(apiMember);\n          break;\n        }\n        case ApiItemKind.PropertySignature: {\n          if ((apiMember as ApiPropertyItem).isEventProperty) {\n            eventsTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createModifiersCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember, isInherited)\n              ])\n            );\n          } else {\n            propertiesTable.addRow(\n              new DocTableRow({ configuration }, [\n                this._createTitleCell(apiMember),\n                this._createModifiersCell(apiMember),\n                this._createPropertyTypeCell(apiMember),\n                this._createDescriptionCell(apiMember, isInherited)\n              ])\n            );\n          }\n\n          this._writeApiItemPage(apiMember);\n          break;\n        }\n      }\n    }\n\n    if (eventsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Events' }));\n      output.appendNode(eventsTable);\n    }\n\n    if (propertiesTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Properties' }));\n      output.appendNode(propertiesTable);\n    }\n\n    if (methodsTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Methods' }));\n      output.appendNode(methodsTable);\n    }\n  }\n\n  /**\n   * GENERATE PAGE: FUNCTION-LIKE\n   */\n  private _writeParameterTables(output: DocSection, apiParameterListMixin: ApiParameterListMixin): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const parametersTable: DocTable = new DocTable({\n      configuration,\n      headerTitles: ['Parameter', 'Type', 'Description']\n    });\n    for (const apiParameter of apiParameterListMixin.parameters) {\n      const parameterDescription: DocSection = new DocSection({ configuration });\n\n      if (apiParameter.isOptional) {\n        parameterDescription.appendNodesInParagraph([\n          new DocEmphasisSpan({ configuration, italic: true }, [\n            new DocPlainText({ configuration, text: '(Optional)' })\n          ]),\n          new DocPlainText({ configuration, text: ' ' })\n        ]);\n      }\n\n      if (apiParameter.tsdocParamBlock) {\n        this._appendAndMergeSection(parameterDescription, apiParameter.tsdocParamBlock.content);\n      }\n\n      parametersTable.addRow(\n        new DocTableRow({ configuration }, [\n          new DocTableCell({ configuration }, [\n            new DocParagraph({ configuration }, [\n              new DocPlainText({ configuration, text: apiParameter.name })\n            ])\n          ]),\n          new DocTableCell({ configuration }, [\n            this._createParagraphForTypeExcerpt(apiParameter.parameterTypeExcerpt)\n          ]),\n          new DocTableCell({ configuration }, parameterDescription.nodes)\n        ])\n      );\n    }\n\n    if (parametersTable.rows.length > 0) {\n      output.appendNode(new DocHeading({ configuration, title: 'Parameters' }));\n      output.appendNode(parametersTable);\n    }\n\n    if (ApiReturnTypeMixin.isBaseClassOf(apiParameterListMixin)) {\n      const returnTypeExcerpt: Excerpt = apiParameterListMixin.returnTypeExcerpt;\n      output.appendNode(\n        new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, bold: true }, [\n            new DocPlainText({ configuration, text: 'Returns:' })\n          ])\n        ])\n      );\n\n      output.appendNode(this._createParagraphForTypeExcerpt(returnTypeExcerpt));\n\n      if (apiParameterListMixin instanceof ApiDocumentedItem) {\n        if (apiParameterListMixin.tsdocComment && apiParameterListMixin.tsdocComment.returnsBlock) {\n          this._appendSection(output, apiParameterListMixin.tsdocComment.returnsBlock.content);\n        }\n      }\n    }\n  }\n\n  private _createParagraphForTypeExcerpt(excerpt: Excerpt): DocParagraph {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const paragraph: DocParagraph = new DocParagraph({ configuration });\n\n    if (!excerpt.text.trim()) {\n      paragraph.appendNode(new DocPlainText({ configuration, text: '(not declared)' }));\n    } else {\n      this._appendExcerptWithHyperlinks(paragraph, excerpt);\n    }\n\n    return paragraph;\n  }\n\n  private _appendExcerptWithHyperlinks(docNodeContainer: DocNodeContainer, excerpt: Excerpt): void {\n    for (const token of excerpt.spannedTokens) {\n      this._appendExcerptTokenWithHyperlinks(docNodeContainer, token);\n    }\n  }\n\n  private _appendExcerptTokenWithHyperlinks(docNodeContainer: DocNodeContainer, token: ExcerptToken): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    // Markdown doesn't provide a standardized syntax for hyperlinks inside code spans, so we will render\n    // the type expression as DocPlainText.  Instead of creating multiple DocParagraphs, we can simply\n    // discard any newlines and let the renderer do normal word-wrapping.\n    const unwrappedTokenText: string = token.text.replace(/[\\r\\n]+/g, ' ');\n\n    // If it's hyperlinkable, then append a DocLinkTag\n    if (token.kind === ExcerptTokenKind.Reference && token.canonicalReference) {\n      const apiItemResult: IResolveDeclarationReferenceResult = this._apiModel.resolveDeclarationReference(\n        token.canonicalReference,\n        undefined\n      );\n\n      if (apiItemResult.resolvedApiItem) {\n        docNodeContainer.appendNode(\n          new DocLinkTag({\n            configuration,\n            tagName: '@link',\n            linkText: unwrappedTokenText,\n            urlDestination: this._getLinkFilenameForApiItem(apiItemResult.resolvedApiItem)\n          })\n        );\n        return;\n      }\n    }\n\n    // Otherwise append non-hyperlinked text\n    docNodeContainer.appendNode(new DocPlainText({ configuration, text: unwrappedTokenText }));\n  }\n\n  private _createTitleCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    let linkText: string = Utilities.getConciseSignature(apiItem);\n    if (ApiOptionalMixin.isBaseClassOf(apiItem) && apiItem.isOptional) {\n      linkText += '?';\n    }\n\n    return new DocTableCell({ configuration }, [\n      new DocParagraph({ configuration }, [\n        new DocLinkTag({\n          configuration,\n          tagName: '@link',\n          linkText: linkText,\n          urlDestination: this._getLinkFilenameForApiItem(apiItem)\n        })\n      ])\n    ]);\n  }\n\n  /**\n   * This generates a DocTableCell for an ApiItem including the summary section and \"(BETA)\" annotation.\n   *\n   * @remarks\n   * We mostly assume that the input is an ApiDocumentedItem, but it's easier to perform this as a runtime\n   * check than to have each caller perform a type cast.\n   */\n  private _createDescriptionCell(apiItem: ApiItem, isInherited: boolean = false): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    if (ApiReleaseTagMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.releaseTag === ReleaseTag.Alpha || apiItem.releaseTag === ReleaseTag.Beta) {\n        section.appendNodesInParagraph([\n          new DocEmphasisSpan({ configuration, bold: true, italic: true }, [\n            new DocPlainText({\n              configuration,\n              text: `(${apiItem.releaseTag === ReleaseTag.Alpha ? 'ALPHA' : 'BETA'})`\n            })\n          ]),\n          new DocPlainText({ configuration, text: ' ' })\n        ]);\n      }\n    }\n\n    if (ApiOptionalMixin.isBaseClassOf(apiItem) && apiItem.isOptional) {\n      section.appendNodesInParagraph([\n        new DocEmphasisSpan({ configuration, italic: true }, [\n          new DocPlainText({ configuration, text: '(Optional)' })\n        ]),\n        new DocPlainText({ configuration, text: ' ' })\n      ]);\n    }\n\n    if (apiItem instanceof ApiDocumentedItem) {\n      if (apiItem.tsdocComment !== undefined) {\n        this._appendAndMergeSection(section, apiItem.tsdocComment.summarySection);\n      }\n    }\n\n    if (isInherited && apiItem.parent) {\n      section.appendNode(\n        new DocParagraph({ configuration }, [\n          new DocPlainText({ configuration, text: '(Inherited from ' }),\n          new DocLinkTag({\n            configuration,\n            tagName: '@link',\n            linkText: apiItem.parent.displayName,\n            urlDestination: this._getLinkFilenameForApiItem(apiItem.parent)\n          }),\n          new DocPlainText({ configuration, text: ')' })\n        ])\n      );\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  private _createModifiersCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    // Output modifiers in syntactically correct order: first access modifier (here: `protected`), then\n    // `static` or `abstract` (no member can be both, so the order between the two of them does not matter),\n    // last `readonly`. If `override` was supported, it would go directly before `readonly`.\n\n    if (ApiProtectedMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.isProtected) {\n        section.appendNode(\n          new DocParagraph({ configuration }, [new DocCodeSpan({ configuration, code: 'protected' })])\n        );\n      }\n    }\n\n    if (ApiStaticMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.isStatic) {\n        section.appendNode(\n          new DocParagraph({ configuration }, [new DocCodeSpan({ configuration, code: 'static' })])\n        );\n      }\n    }\n\n    if (ApiAbstractMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.isAbstract) {\n        section.appendNode(\n          new DocParagraph({ configuration }, [new DocCodeSpan({ configuration, code: 'abstract' })])\n        );\n      }\n    }\n\n    if (ApiReadonlyMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.isReadonly) {\n        section.appendNode(\n          new DocParagraph({ configuration }, [new DocCodeSpan({ configuration, code: 'readonly' })])\n        );\n      }\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  private _createPropertyTypeCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    if (apiItem instanceof ApiPropertyItem) {\n      section.appendNode(this._createParagraphForTypeExcerpt(apiItem.propertyTypeExcerpt));\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  private _createInitializerCell(apiItem: ApiItem): DocTableCell {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    const section: DocSection = new DocSection({ configuration });\n\n    if (ApiInitializerMixin.isBaseClassOf(apiItem)) {\n      if (apiItem.initializerExcerpt) {\n        section.appendNodeInParagraph(\n          new DocCodeSpan({ configuration, code: apiItem.initializerExcerpt.text })\n        );\n      }\n    }\n\n    return new DocTableCell({ configuration }, section.nodes);\n  }\n\n  private _writeBreadcrumb(output: DocSection, apiItem: ApiItem): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n\n    output.appendNodeInParagraph(\n      new DocLinkTag({\n        configuration,\n        tagName: '@link',\n        linkText: 'Home',\n        urlDestination: this._getLinkFilenameForApiItem(this._apiModel)\n      })\n    );\n\n    for (const hierarchyItem of apiItem.getHierarchy()) {\n      switch (hierarchyItem.kind) {\n        case ApiItemKind.Model:\n        case ApiItemKind.EntryPoint:\n          // We don't show the model as part of the breadcrumb because it is the root-level container.\n          // We don't show the entry point because today API Extractor doesn't support multiple entry points;\n          // this may change in the future.\n          break;\n        default:\n          output.appendNodesInParagraph([\n            new DocPlainText({\n              configuration,\n              text: ' > '\n            }),\n            new DocLinkTag({\n              configuration,\n              tagName: '@link',\n              linkText: hierarchyItem.displayName,\n              urlDestination: this._getLinkFilenameForApiItem(hierarchyItem)\n            })\n          ]);\n      }\n    }\n  }\n\n  private _writeAlphaWarning(output: DocSection): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n    const betaWarning: string =\n      'This API is provided as an alpha preview for developers and may change' +\n      ' based on feedback that we receive.  Do not use this API in a production environment.';\n    output.appendNode(\n      new DocNoteBox({ configuration }, [\n        new DocParagraph({ configuration }, [new DocPlainText({ configuration, text: betaWarning })])\n      ])\n    );\n  }\n\n  private _writeBetaWarning(output: DocSection): void {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n    const betaWarning: string =\n      'This API is provided as a beta preview for developers and may change' +\n      ' based on feedback that we receive.  Do not use this API in a production environment.';\n    output.appendNode(\n      new DocNoteBox({ configuration }, [\n        new DocParagraph({ configuration }, [new DocPlainText({ configuration, text: betaWarning })])\n      ])\n    );\n  }\n\n  private _appendSection(output: DocSection, docSection: DocSection): void {\n    for (const node of docSection.nodes) {\n      output.appendNode(node);\n    }\n  }\n\n  private _appendAndMergeSection(output: DocSection, docSection: DocSection): void {\n    let firstNode: boolean = true;\n    for (const node of docSection.nodes) {\n      if (firstNode) {\n        if (node.kind === DocNodeKind.Paragraph) {\n          output.appendNodesInParagraph(node.getChildNodes());\n          firstNode = false;\n          continue;\n        }\n      }\n      firstNode = false;\n\n      output.appendNode(node);\n    }\n  }\n\n  private _getMembersAndWriteIncompleteWarning(\n    apiClassOrInterface: ApiClass | ApiInterface,\n    output: DocSection\n  ): readonly ApiItem[] {\n    const configuration: TSDocConfiguration = this._tsdocConfiguration;\n    const showInheritedMembers: boolean = !!this._documenterConfig?.configFile.showInheritedMembers;\n    if (!showInheritedMembers) {\n      return apiClassOrInterface.members;\n    }\n\n    const result: IFindApiItemsResult = apiClassOrInterface.findMembersWithInheritance();\n\n    // If the result is potentially incomplete, write a short warning communicating this.\n    if (result.maybeIncompleteResult) {\n      output.appendNode(\n        new DocParagraph({ configuration }, [\n          new DocEmphasisSpan({ configuration, italic: true }, [\n            new DocPlainText({\n              configuration,\n              text: '(Some inherited members may not be shown because they are not represented in the documentation.)'\n            })\n          ])\n        ])\n      );\n    }\n\n    // Log the messages for diagnostic purposes.\n    for (const message of result.messages) {\n      console.log(`Diagnostic message for findMembersWithInheritance: ${message.text}`);\n    }\n\n    return result.items;\n  }\n\n  private _getFilenameForApiItem(apiItem: ApiItem): string {\n    if (apiItem.kind === ApiItemKind.Model) {\n      return 'index.md';\n    }\n\n    let baseName: string = '';\n    for (const hierarchyItem of apiItem.getHierarchy()) {\n      // For overloaded methods, add a suffix such as \"MyClass.myMethod_2\".\n      let qualifiedName: string = Utilities.getSafeFilenameForName(hierarchyItem.displayName);\n      if (ApiParameterListMixin.isBaseClassOf(hierarchyItem)) {\n        if (hierarchyItem.overloadIndex > 1) {\n          // Subtract one for compatibility with earlier releases of API Documenter.\n          // (This will get revamped when we fix GitHub issue #1308)\n          qualifiedName += `_${hierarchyItem.overloadIndex - 1}`;\n        }\n      }\n\n      switch (hierarchyItem.kind) {\n        case ApiItemKind.Model:\n        case ApiItemKind.EntryPoint:\n        case ApiItemKind.EnumMember:\n          break;\n        case ApiItemKind.Package:\n          baseName = Utilities.getSafeFilenameForName(PackageName.getUnscopedName(hierarchyItem.displayName));\n          break;\n        default:\n          baseName += '.' + qualifiedName;\n      }\n    }\n    return baseName + '.md';\n  }\n\n  private _getLinkFilenameForApiItem(apiItem: ApiItem): string {\n    return './' + this._getFilenameForApiItem(apiItem);\n  }\n\n  private _deleteOldOutputFiles(): void {\n    console.log('Deleting old output from ' + this._outputFolder);\n    FileSystem.ensureEmptyFolder(this._outputFolder);\n  }\n}\n"]}