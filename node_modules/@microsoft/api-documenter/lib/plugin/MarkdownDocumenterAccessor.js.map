{"version":3,"file":"MarkdownDocumenterAccessor.js","sourceRoot":"","sources":["../../src/plugin/MarkdownDocumenterAccessor.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAS3D;;;;;;;;GAQG;AACH,MAAa,0BAA0B;IAGrC,gBAAgB;IAChB,YAAmB,cAAyD;QAC1E,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACI,iBAAiB,CAAC,OAAgB;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;CACF;AAhBD,gEAgBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { ApiItem } from '@microsoft/api-extractor-model';\n\n/** @internal */\nexport interface IMarkdownDocumenterAccessorImplementation {\n  getLinkForApiItem(apiItem: ApiItem): string | undefined;\n}\n\n/**\n * Provides access to the documenter that is generating the output.\n *\n * @privateRemarks\n * This class is wrapper that provides access to the underlying MarkdownDocumenter, while hiding the implementation\n * details to ensure that the plugin API contract is stable.\n *\n * @public\n */\nexport class MarkdownDocumenterAccessor {\n  private _implementation: IMarkdownDocumenterAccessorImplementation;\n\n  /** @internal */\n  public constructor(implementation: IMarkdownDocumenterAccessorImplementation) {\n    this._implementation = implementation;\n  }\n\n  /**\n   * For a given `ApiItem`, return its markdown hyperlink.\n   *\n   * @returns The hyperlink, or `undefined` if the `ApiItem` object does not have a hyperlink.\n   */\n  public getLinkForApiItem(apiItem: ApiItem): string | undefined {\n    return this._implementation.getLinkForApiItem(apiItem);\n  }\n}\n"]}