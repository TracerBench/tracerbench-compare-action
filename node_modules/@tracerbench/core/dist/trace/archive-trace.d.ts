import { Archive, Entry, Header } from '@tracerbench/har';
import { SessionConnection } from 'chrome-debugging-client';
import Protocol from 'devtools-protocol';
import type { Screenshot } from '../util/interfaces';
import { IConditions } from './conditions';
declare type HARArchiveResponse = {
    archive: Archive;
    screenshotData?: Screenshot[];
};
export declare function recordHARClient(url: string, cookies: Protocol.Network.CookieParam[], marker: string, conditions: IConditions, headless?: boolean, altBrowserArgs?: string[], screenshots?: boolean): Promise<HARArchiveResponse>;
export declare function processEntriesLoop(chrome: SessionConnection, entryURL: string): Promise<Entry[]>;
export declare function processEntries(networkRequests: Protocol.Network.ResponseReceivedEvent[], chrome: SessionConnection, entryURL: string): Promise<Entry[]>;
export declare function getResponseBody(requestId: string, chrome: SessionConnection): Promise<string>;
export declare function handleHeaders(headers?: Protocol.Network.Headers): Header[];
export {};
//# sourceMappingURL=archive-trace.d.ts.map